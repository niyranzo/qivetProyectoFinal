version: '3.8'
services:
  backend:
    build: .
    container_name: qivet_backend
    ports:
      - "3000:3000"
    depends_on:
      postgres:
        condition: service_healthy  # Espera a que PostgreSQL esté listo
    environment:
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_NAME=qivet_db
      - DB_USER=admin
      - DB_PASSWORD=admin  # Asegúrate de que coincide con POSTGRES_PASSWORD en postgres
    networks:
      - backend_network
    restart: on-failure  # Evita bucles infinitos si hay errores

  postgres:
    image: postgres:latest
    container_name: qivet_postgres
    environment:
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: admin  # Debe coincidir con DB_PASSWORD en backend
      POSTGRES_DB: qivet_db
    networks:
      - backend_network
    volumes:
      - postgres_data:/var/lib/postgresql/data
    restart: unless-stopped  # Evita reinicios constantes si hay errores críticos
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U admin -d qivet_db"]
      interval: 5s
      retries: 5
      timeout: 3s

  adminer:
    image: adminer
    container_name: qivet_adminer
    networks:
      - backend_network
    ports:
      - "8080:8080"
    depends_on:
      postgres:
        condition: service_healthy
    restart: unless-stopped  # No siempre es necesario reiniciar

volumes:
  postgres_data:

networks:
  backend_network:
    driver: bridge
